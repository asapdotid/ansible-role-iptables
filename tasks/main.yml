---
- name: IPTABLES | Include OS family of {{ ansible_os_family }} variables.
  ansible.builtin.include_vars:
    file: "{{ item }}.yml"
  loop:
    - "{{ ansible_os_family | lower }}"
    - main

- include_tasks: disable-firewalls.yml
  loop: "{{ iptables_disabled_firewall_services }}"
  loop_control:
    loop_var: firewall_services
  when:
    - iptables_disabled_firewalls
    - iptables_disabled_firewall_services != "{}"

- name: IPTABLES | Ensure iptables is present.
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ iptables_packages }}"
  when:
    - iptables_packages != "{}"

- name: IPTABLES | Flush iptables the first time playbook runs.
  ansible.builtin.command: >
    iptables -F
    creates=/etc/firewall.bash

- name: IPTABLES | Copy firewall script into place.
  ansible.builtin.template:
    src: firewall.bash.j2
    dest: /etc/firewall.bash
    owner: root
    group: root
    mode: 0744
  notify: restart firewall

- name: IPTABLES | Copy firewall init script into place.
  ansible.builtin.template:
    src: firewall.init.j2
    dest: /etc/init.d/firewall
    owner: root
    group: root
    mode: 0755
  when: "ansible_service_mgr != 'systemd'"

- name: IPTABLES | Copy firewall systemd unit file into place (for systemd systems).
  ansible.builtin.template:
    src: firewall.unit.j2
    dest: /etc/systemd/system/firewall.service
    owner: root
    group: root
    mode: 0644
  when: "ansible_service_mgr == 'systemd'"

- name: IPTABLES | Configure the firewall service.
  ansible.builtin.service:
    name: firewall
    state: "{{ iptables_state }}"
    enabled: "{{ iptables_enabled_at_boot }}"
